"use client";
import React from "react";
import Link from "next/link";

import { ContentLayout } from "@/components/admin-panel/content-layout";
import {
  Breadcrumb,
  BreadcrumbItem,
  BreadcrumbLink,
  BreadcrumbList,
  BreadcrumbPage,
  BreadcrumbSeparator
} from "@/components/ui/breadcrumb";
import { DataTable } from "./data-table";
import productData from "./data.json";
import { Product } from "./schema";

// Section Cards
import { TrendingDownIcon, TrendingUpIcon } from "lucide-react";

import { Chip } from "@heroui/chip";
import {
  Card,
  CardDescription,
  CardHeader,
  CardTitle
} from "@/components/ui/card";
import { Separator } from "@/components/ui/separator";


type ColorType =
  | "default"
  | "success"
  | "danger"
  | "warning"
  | "primary"
  | "secondary"
  | undefined;

export default function ProduitsExploitations() {
  return (
    <ContentLayout title="Produits d'exploitation">
      <Breadcrumb>
        <BreadcrumbList>
          <BreadcrumbItem>
            <BreadcrumbLink asChild>
              <Link href="/dashboard">Dashboard</Link>
            </BreadcrumbLink>
          </BreadcrumbItem>
          <BreadcrumbSeparator />
          <BreadcrumbItem>
            <BreadcrumbLink asChild>
              <Link href="/budget-de-caisse">Budget de Caisse</Link>
            </BreadcrumbLink>
          </BreadcrumbItem>
          <BreadcrumbSeparator />
          <BreadcrumbItem>
            <BreadcrumbPage>Produits d&apos;exploitation</BreadcrumbPage>
          </BreadcrumbItem>
        </BreadcrumbList>
      </Breadcrumb>
      <SectionCards products={productData as Product[]} />
      <Separator />
      <h2 className="text-2xl font-semibold tabular-nums my-6">Produits et services</h2>
      <DataTable data={productData as Product[]} />
    </ContentLayout>
  );
}

export function SectionCards({ products }: { products: Product[] }) {
  // Calculate total values
  const totalRevenue = products.reduce((sum, product) => {
    const annualUnits =
      product.januaryValue +
      product.februaryValue +
      product.marchValue +
      product.aprilValue +
      product.mayValue +
      product.juneValue +
      product.julyValue +
      product.augustValue +
      product.septemberValue +
      product.octoberValue +
      product.novemberValue +
      product.decemberValue;
    return sum + annualUnits * product.unitPrice;
  }, 0);

  const totalCost = products.reduce((sum, product) => {
    const annualUnits =
      product.januaryValue +
      product.februaryValue +
      product.marchValue +
      product.aprilValue +
      product.mayValue +
      product.juneValue +
      product.julyValue +
      product.augustValue +
      product.septemberValue +
      product.octoberValue +
      product.novemberValue +
      product.decemberValue;
    return sum + annualUnits * product.productionPrice;
  }, 0);

  const netProfit = totalRevenue - totalCost;

  const sectionCardsData = [
    {
      title: "Chiffres d'affaires HT",
      amount: `$ ${totalRevenue.toLocaleString()}`,
      change: "-7%",
      color: "danger" as ColorType,
      icon: <TrendingDownIcon className="size-3" />
    },
    {
      title: "Couts de productions",
      amount: `$ ${totalCost.toLocaleString()}`,
      change: "+0%",
      color: "default" as ColorType,
      icon: <TrendingUpIcon className="size-3" />
    },
    {
      title: "Bénéfices Net",
      amount: `$ ${netProfit.toLocaleString()}`,
      change: "+12.5%",
      color: "success" as ColorType,
      icon: <TrendingUpIcon className="size-3" />
    },
    {
      title: "Produits/services vendus",
      amount: `57`,
      change: "0%",
      color: "warning" as ColorType,
      icon: <TrendingDownIcon className="size-3" />
    }
  ];
  return (
    <div className="grid grid-cols-1 md:grid-cols-3 xl:grid-cols-4 2xl:grid-cols-4 gap-4 my-6">
      {sectionCardsData.map((data, index) => (
        <SectionCard key={index} {...data} />
      ))}
    </div>
  );
}

function SectionCard({
  title,
  amount,
  change,
  color,
  icon
}: {
  title: string;
  amount: string;
  change: string;
  color?: ColorType;
  icon: React.ReactNode;
}) {
  return (
    <Card className="bg-gradient-to-t from-primary/5 to-card shadow-sm">
      <CardHeader className="relative">
        <CardDescription>{title}</CardDescription>
        <CardTitle className="text-2xl sm:text-3xl font-semibold tabular-nums">
          {amount}
        </CardTitle>
        <div className="absolute right-4 top-4">
          <Chip
            variant="bordered"
            startContent={icon}
            radius="full"
            color={color}
          >
            {change}
          </Chip>
        </div>
      </CardHeader>
    </Card>
  );
}
